@use 'variables';
@use 'sass:map';

.filter {
  &-BEBEBE {
    filter: map.get(variables.$filter, 'bebebe');
  }

  &-C77777 {
    filter: map.get(variables.$filter, 'c77777');
  }
}

.hamburger-wrapper {
  grid-area: hamburger;
  align-items: center;
  display: none;
}

.modal-menu-header {
  background: variables.$header-bg;
}

.console {
  &-component {
    background-color: rgb(35 35 35 / 70%);
    border-radius: 0.5rem;
    overflow: hidden;
    container-name: console;
    container-type: inline-size;
    contain: layout;
    z-index: 2;

    &-wrapper {
      width: 100%;
      max-height: 100%;
      min-height: 100%;
      position: relative;
    }
  }

  &-header {
    min-height: 5rem;
    max-height: 5rem;
    display: grid;
    overflow: hidden;
    grid: ". name buttons" 60%
    "links links links" 40% /
    minmax(5rem, 1fr) 6fr minmax(5rem, 1fr);
    background: rgb(75 81 75);
    background: variables.$header-bg;

    &-name {
      grid-area: name;
      white-space: nowrap;
      overflow: hidden;
      display: flex;
      justify-content: center;
      align-items: center;
      color: white;
    }

    &-buttons {
      grid-area: buttons;
      display: flex;
      justify-content: end;

      > button {
        margin: 0.5rem 0.25rem;

        &:last-child {
          margin-right: 0.5rem;
        }
      }

      .console-header-button:active::before {
        content: "";
        left: 0;
        top: 0;
        position: absolute;
        border-radius: 9999px;
        width: 100%;
        height: 100%;
        z-index: 1;
        box-shadow: inset 0 0 3px 1px rgb(0 0 0 / 100%);
      }
    }

    &-handler {
      z-index: 0;
      min-height: 5rem;
      max-height: 5rem;
      border-radius: 0.5rem 0.5rem 0 0;
    }

    &-links {
      grid-area: links;
      display: flex;
      align-items: end;

      ul {
        z-index: 1
      }
    }

    a {
      font-weight: normal
    }

    &-button {
      height: 50%;
      width: fit-content;
      border-radius: 9999px;
      overflow: hidden;
      position: relative;
      z-index: 1;

      :hover {
        img.filter-BEBEBE {
          filter: map.get(variables.$filter, 'e4e3e3');
        }

        img.filter-C77777 {
          filter: map.get(variables.$filter, 'c74848');
        }
      }

      :focus-visible {
        outline: 0.15rem white dashed;

        img.filter-BEBEBE {
          filter: map.get(variables.$filter, 'e4e3e3');
        }

        img.filter-C77777 {
          filter: map.get(variables.$filter, 'c74848');
        }
      }
    }

  }

  &-content {
    overflow: hidden scroll;
    min-height: calc(100% - 5rem - 1.4rem);
    max-height: calc(100% - 5rem - 1.4rem);
    width: calc(100% - 1.4rem);
    margin: 0.7rem 0.5rem 0.7rem 0.7rem;
    padding-right: 0.2rem;
    position: relative;
  }
}

@container console (width < 700px) {
  .console-content {
    max-height: calc(100% - 1.4rem - 3.5rem);
    min-height: calc(100% - 1.4rem - 3.5rem);
  }

  .console-header[is-mobile="true"] {
    padding: 0.5rem;
    min-height: 3.5rem;
    max-height: 3.5rem;
    grid: "hamburger name buttons" 100%
        / minmax(5rem, 1.5fr) 3fr minmax(5rem, 1.5fr);

    .console-header-button {
      height: 60%
    }

    .hamburger-wrapper {
      display: flex;

      > .console-header-button {
        height: 100%
      }
    }

    .console-header {
      &-handler {
        min-height: 3.5rem;
        max-height: 3.5rem;
      }

      > div {
        align-items: start;
      }

      &-links {
        position: absolute;
        top: 4.5rem;
        left: 0.5rem;
        background-color: rgb(35 35 35 / 70%);
        border-radius: 0.5rem;
        overflow: hidden;
        flex-direction: column;
        z-index: 1;

        .console-header-button {
          width: 1.5rem;
          height: auto;
        }

        li a {
          padding: 0.5rem 4.5rem 0.5rem 1rem;
        }
      }

      &-buttons {
        > button {
          margin: 0.25rem;

          :last-child {
            margin-right: 0.25rem;
          }
        }
      }
    }
  }
}

.blurry-bg {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -1;
  backdrop-filter: blur(3px);
}